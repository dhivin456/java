package dhivin_sh;
import java.util.*;
import java.io.*;
import java.lang.*;
public class ClosestPalindrome 
{
	    static String nearestPalindromic(String n) 
	    {
	        int order = (int) Math.pow(10, n.length()/2);
	        //System.out.println("order="+order);
	        Long ans = Long.valueOf(new String(n));
	        //System.out.println("ans="+ ans);
	        Long noChange = reverse(ans);
	        //System.out.println("nochange"+noChange);
	        Long larger = reverse((ans/order)*order + order+1);
	        //System.out.println("larger="+larger);
	        Long smaller = reverse((ans/order)*order - 1 );
	        //System.out.println("smaller="+smaller);
	        if ( noChange > ans)
	        {
	            larger = (long) Math.min(noChange, larger);
	        } 
	        else if ( noChange < ans) 
	        {
	            smaller = (long) Math.max(noChange, smaller); 
	        }       
	        return String.valueOf( ans - smaller <= larger - ans ? smaller :larger) ;
	}
	    static Long reverse(Long ans) {
	        char[] a = String.valueOf(ans).toCharArray();
	        int i = 0;
	        int j = a.length-1;
	        while (i < j)
	        {
	            a[j--] = a[i++];
	        }
	        return Long.valueOf(new String(a));
	    }
	    public static void main (String[] args)
	    {
	        Scanner sc = new Scanner(System.in);
	        int num = sc.nextInt();
	        String str = String.valueOf(num);
	        System.out.println(nearestPalindromic(str));
	        
	    }
}

